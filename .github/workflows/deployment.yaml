name: CD

on:
    push:
        branches: [main]

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest

        steps:
            - name: Fazendo Checkout do código
              uses: actions/checkout@v2

            - name: Construindo e publicando a imagem
              uses: docker/build-push-action@v1.1.0
              with: 
                username: blgianinis
                password: ${{ secrets.DOCKER_PASSWORD }}
                repository: blgianinis/nodeapp
                tags: ${{ github.sha }}, latest
    
    deply:
        name: Deploy
        runs-on: ubuntu-latest
        needs: build
        steps:
            - name: Fazendo Checkout do código
              uses: actions/checkout@v2
            
            - name: Rodando o Kustomize
              uses: imranismail/setup-kustomize@v1
              with:
                kustomize_version: v3.6.1
            
            - name: Atualizando os valores da imagem
              run: |
                cd k8s
                kustomize edit set image nodeapp=blgianinis/nodeapp:${{ github.sha }}
            
            - name: Criando commit da tag nova da imagem
              run: |
                git config --local user.email "action@github.com"
                git config --local user.name "Deploy Action"
                git commit -am "change image tag"
            
            - name: Fazendo push da nova versão da imagem
              uses: ad-m/github-push-action@master
            - name: Create or update ArgoCD app
              env:
                    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
                    ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
              run: |
                    # Define o payload do app
                    APP_PAYLOAD=$(cat <<EOF
                    {
                      "metadata": {
                        "name": "nodeapp",
                        "namespace": "nodeapp"
                      },
                      "spec": {
                        "project": "default",
                        "source": {
                          "repoURL": "https://github.com/brunogianini/argocd-node-cicd.git",
                          "path": "/k8s",
                          "targetRevision": "HEAD"
                        },
                        "destination": {
                          "server": "https://kubernetes.default.svc",
                          "namespace": "argocd"
                        },
                        "syncPolicy": {
                          "automated": {
                            "prune": true,
                            "selfHeal": true
                          }
                        }
                      }
                    }
                    EOF
                    )

                    # Envia o payload para criar ou atualizar o app
                    curl -X POST \
                      -H "Content-Type: application/json" \
                      -H "Authorization: Bearer $ARGOCD_AUTH_TOKEN" \
                      -d "$APP_PAYLOAD" \
                      "$ARGOCD_SERVER/api/v1/applications"

            - name: Sync ArgoCD app
              env:
                    ARGOCD_SERVER: ${{ secrets.ARGOCD_SERVER }}
                    ARGOCD_AUTH_TOKEN: ${{ secrets.ARGOCD_AUTH_TOKEN }}
              run: |
                    curl -X POST \
                      -H "Authorization: Bearer $ARGOCD_AUTH_TOKEN" \
                      "$ARGOCD_SERVER/api/v1/applications/my-app/sync"


                        